on early-init
    write /sys/class/boot_monitor/boot_timer 1
    insmod /boot/aml_nftl_dev.ko

on init

on aml-firstboot-init
    #show first init logo
    #display_logo /firstinitlogo.rle

    #format data and cache patrition if not exist
    confirm_formated ext4 /dev/block/data /data
    confirm_formated ext4 /dev/block/cache /cache

on fs
    setprop ro.crypto.umount_sd false
    mount ext4 /dev/block/system /system wait ro noatime nodiratime noauto_da_alloc
    e2fsck -y /dev/block/data
    mount ext4 /dev/block/data /data noatime nodiratime norelatime nosuid nodev noauto_da_alloc
    mount ext4 /dev/block/cache /cache noatime nodiratime norelatime nosuid nodev noauto_da_alloc
    write /sys/class/aml_keys/aml_keys/version auto3

on post-fs-data

on boot


    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 984000
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq 96000
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor hotplug 
    write /sys/class/freq_limit/limit 1

    write /sys/class/vfm/map "rm default"
    write /sys/class/vfm/map "add default decoder ppmgr deinterlace amvideo"
    #write /sys/class/vfm/map "add default decoder ppmgr amvideo"

write /proc/sys/vm/mem_management_thresh 0

#add for mali scaling mode set
    chown system /sys/module/mali/parameters/scaling_mode

on property:svc.bootanim=running
    write /sys/class/graphics/fb1/free_scale 0
    write /sys/class/graphics/fb0/free_scale 0x10001
    write /sys/class/ppmgr/ppscaler 1
    write /sys/class/graphics/fb0/blank 0
    write /sys/class/graphics/fb1/blank 1
    write /sys/class/graphics/fb2/blank 1
    write /sys/class/graphics/fb3/blank 1

on property:init.svc.bootanim=stopped
    start preinstall
    write /sys/class/graphics/fb0/blank 0
#    write /sys/class/aml_mod/mod_off audio
    write /sys/class/aml_mod/mod_off mipi
#    write /sys/class/aml_mod/mod_off spi
#    write /sys/class/aml_mod/mod_off uart0
    write /sys/class/aml_mod/mod_off uart1
    write /sys/class/aml_mod/mod_off uart2
    write /sys/class/aml_mod/mod_off uart3
#    write /sys/class/aml_mod/mod_off venc
#   write /sys/class/aml_mod/mod_off hdmi
    write /sys/class/aml_mod/mod_off bt656
    write /sys/class/aml_mod/mod_off vdec
    write /sys/class/aml_mod/mod_off rom
   write /sys/class/aml_mod/mod_off efuse
    write /sys/class/aml_mod/mod_off random_num_gen
    write /sys/class/aml_mod/mod_off tcon
    write /sys/class/aml_mod/mod_off ethernet
#    write /sys/class/aml_mod/mod_off media_cpu
   write /sys/class/aml_mod/mod_off viu2
    write /sys/class/aml_mod/mod_off smart_card
    write /sys/class/aml_mod/mod_off sdhc
    write /sys/class/aml_mod/mod_off stream
    write /sys/class/aml_mod/mod_off blk_mov
    write /sys/class/aml_mod/mod_off dvin
#    write /sys/class/aml_mod/mod_off rdma
    write /sys/class/aml_mod/mod_off ge2d
    write /sys/class/aml_mod/mod_off vdin
    write /sys/class/aml_mod/mod_off lvds
    write /sys/class/aml_mod/mod_off demux

  # write /sys/class/aml_mod/dynamical_control audio
    write /sys/class/aml_mod/dynamical_control vdec
    write /sys/class/aml_mod/dynamical_control bt656
    #write /sys/class/aml_mod/dynamical_control venc
    #write /sys/class/aml_mod/dynamical_control media_cpu
    write /sys/class/aml_mod/dynamical_control ge2d
   #write /sys/class/aml_mod/dynamical_control vdin
    write /sys/class/aml_mod/dynamical_control demux

    write /sys/class/boot_monitor/boot_timer 0
    write /sys/module/di/parameters/bypass_prog 1

# Write BT BD_ADDR
service btmacreader /system/bin/btmacreader
    class main
    oneshot

service wpa_supplicant /system/bin/wpa_supplicant \
    -iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf \
    -e/data/misc/wifi/entropy.bin \
    -O/data/misc/wifi/sockets \
    -g@android:wpa_wlan0
    #   we will start as root and wpa_supplicant will switch to user wifi
    #   after setting up the capabilities required for WEXT
    #   user wifi
    #   group wifi inet keystore
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot
 #   write /sys/kernel/mm/ksm/pages_to_scan 100
 #   write /sys/kernel/mm/ksm/sleep_millisecs 500
 #   write /sys/kernel/mm/ksm/run 1

service zram_mem /system/bin/zram_mount.sh
    class main
    oneshot

service p2p_supplicant /system/bin/wpa_supplicant \
    -iwlan0 -Dnl80211 -c/data/misc/wifi/p2p_supplicant.conf \
    -O/data/misc/wifi/sockets \
    -g@android:wpa_wlan0	\
    -puse_p2p_group_interface=1p2p_device=1 -e/data/misc/wifi/entropy.bin
#   we will start as root and wpa_supplicant will switch to user wifi
#   after setting up the capabilities required for WEXT
#   user wifi
#   group wifi inet keystore
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot

service xcmidware /system/bin/xcmid-amlogic
    class main
    user root
    group root system input

service preinstall /system/bin/preinstall.sh
    user root
    group root
    disabled
    oneshot

service cpufreq_limit /system/bin/sh /system/bin/disable_cpu_freq_limit.sh
    class main
    disabled
    oneshot
		
on property:dev.bootcomplete=1
    start cpufreq_limit


